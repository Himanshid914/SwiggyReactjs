{"ast":null,"code":"var _jsxFileName = \"/Users/himanshi/Desktop/swiggyreact/src/components/Contact.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport PathContext from \"../utils/PathContext\";\nimport InputControl from \"./InputControl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Contact = () => {\n  _s();\n  const {\n    setCurrentPath\n  } = useContext(PathContext);\n  const {\n    pathname\n  } = useLocation();\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const handleClick = () => {\n    if (!data.name || !data.email || !data.message) {\n      alert(\"fill every field\");\n    } else alert(\"Message Submitted Successfully\");\n    setData({\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    });\n  };\n  useEffect(() => {\n    setCurrentPath(pathname);\n  }, [pathname, setCurrentPath]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen p-10 flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(InputControl, {\n        label: \"Name\",\n        placeholder: \"Enter Your Name\",\n        value: data.name,\n        onChange: event => setData(prev => ({\n          ...prev,\n          name: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputControl, {\n        label: \"Email\",\n        placeholder: \"Enter Your Email\",\n        value: data.email,\n        onChange: event => setData(prev => ({\n          ...prev,\n          email: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputControl, {\n        label: \"Message\",\n        placeholder: \"Enter the message\",\n        value: data.message,\n        onChange: event => setData(prev => ({\n          ...prev,\n          message: event.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-400 py-2 px-5 border rounded font-Arvo\",\n        onClick: handleClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Contact, \"88IB0ZyxzgDGVo7jzZFmQscHyh8=\", false, function () {\n  return [useLocation];\n});\n_c = Contact;\nexport default Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["useState","useContext","useEffect","useLocation","PathContext","InputControl","jsxDEV","_jsxDEV","Fragment","_Fragment","Contact","_s","setCurrentPath","pathname","data","setData","name","email","message","handleClick","alert","children","className","label","placeholder","value","onChange","event","prev","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/himanshi/Desktop/swiggyreact/src/components/Contact.js"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport PathContext from \"../utils/PathContext\";\nimport InputControl from \"./InputControl\";\n\nconst Contact = () => {\n\n  const {setCurrentPath} = useContext(PathContext);\n  const {pathname} = useLocation();\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n\n  const handleClick = () => {\n      if(!data.name || !data.email || !data.message){\n          alert(\"fill every field\");\n      }\n      else alert(\"Message Submitted Successfully\");\n      setData({\n          name: \"\",\n          email: \"\",\n          message: \"\"\n      })\n  }\n\n  useEffect(() => {\n    setCurrentPath(pathname);\n  }, [pathname, setCurrentPath])\n\n  return (\n    <>\n      <div className=\"min-h-screen p-10 flex flex-col items-center\">\n        <InputControl label=\"Name\" placeholder=\"Enter Your Name\" \n        value = {data.name} \n        onChange = {(event) => setData((prev) => ({\n            ...prev, \n            name: event.target.value,\n            }))\n        }\n        ></InputControl>\n\n        <InputControl\n          label=\"Email\"\n          placeholder=\"Enter Your Email\"\n          value = {data.email}\n          onChange = {(event) => setData((prev) => ({\n              ...prev, \n              email: event.target.value,\n          }))}\n        ></InputControl>\n\n        <InputControl\n          label=\"Message\"\n          placeholder=\"Enter the message\"\n          value = {data.message}\n          onChange = {(event) => setData((prev) => ({\n              ...prev,\n              message: event.target.value,\n          }))}\n\n        ></InputControl>\n\n        <button className=\"bg-green-400 py-2 px-5 border rounded font-Arvo\"\n        onClick={handleClick}\n        >\n          Submit\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Contact;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEpB,MAAM;IAACC;EAAc,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EAChD,MAAM;IAACS;EAAQ,CAAC,GAAGV,WAAW,CAAC,CAAC;EAEhC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC;IAC/BgB,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX,CAAC,CAAC;EAGF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAG,CAACL,IAAI,CAACE,IAAI,IAAI,CAACF,IAAI,CAACG,KAAK,IAAI,CAACH,IAAI,CAACI,OAAO,EAAC;MAC1CE,KAAK,CAAC,kBAAkB,CAAC;IAC7B,CAAC,MACIA,KAAK,CAAC,gCAAgC,CAAC;IAC5CL,OAAO,CAAC;MACJC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb,CAAC,CAAC;EACN,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACdU,cAAc,CAACC,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACA,QAAQ,EAAED,cAAc,CAAC,CAAC;EAE9B,oBACEL,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACEd,OAAA;MAAKe,SAAS,EAAC,8CAA8C;MAAAD,QAAA,gBAC3Dd,OAAA,CAACF,YAAY;QAACkB,KAAK,EAAC,MAAM;QAACC,WAAW,EAAC,iBAAiB;QACxDC,KAAK,EAAIX,IAAI,CAACE,IAAK;QACnBU,QAAQ,EAAKC,KAAK,IAAKZ,OAAO,CAAEa,IAAI,KAAM;UACtC,GAAGA,IAAI;UACPZ,IAAI,EAAEW,KAAK,CAACE,MAAM,CAACJ;QACnB,CAAC,CAAC;MACL;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACc,CAAC,eAEhB1B,OAAA,CAACF,YAAY;QACXkB,KAAK,EAAC,OAAO;QACbC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAIX,IAAI,CAACG,KAAM;QACpBS,QAAQ,EAAKC,KAAK,IAAKZ,OAAO,CAAEa,IAAI,KAAM;UACtC,GAAGA,IAAI;UACPX,KAAK,EAAEU,KAAK,CAACE,MAAM,CAACJ;QACxB,CAAC,CAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eAEhB1B,OAAA,CAACF,YAAY;QACXkB,KAAK,EAAC,SAAS;QACfC,WAAW,EAAC,mBAAmB;QAC/BC,KAAK,EAAIX,IAAI,CAACI,OAAQ;QACtBQ,QAAQ,EAAKC,KAAK,IAAKZ,OAAO,CAAEa,IAAI,KAAM;UACtC,GAAGA,IAAI;UACPV,OAAO,EAAES,KAAK,CAACE,MAAM,CAACJ;QAC1B,CAAC,CAAC;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAES,CAAC,eAEhB1B,OAAA;QAAQe,SAAS,EAAC,iDAAiD;QACnEY,OAAO,EAAEf,WAAY;QAAAE,QAAA,EACpB;MAED;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACN,CAAC;AAEP,CAAC;AAACtB,EAAA,CArEID,OAAO;EAAA,QAGQP,WAAW;AAAA;AAAAgC,EAAA,GAH1BzB,OAAO;AAuEb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}