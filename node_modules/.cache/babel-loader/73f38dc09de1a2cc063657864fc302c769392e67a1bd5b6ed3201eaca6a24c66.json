{"ast":null,"code":"import{useState,useContext,useEffect}from\"react\";import{useLocation}from\"react-router-dom\";import PathContext from\"../utils/PathContext\";import InputControl from\"./InputControl\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const Contact=()=>{const{setCurrentPath}=useContext(PathContext);const{pathname}=useLocation();const[data,setData]=useState({name:\"\",email:\"\",message:\"\"});const handleClick=()=>{if(!data.name||!data.email||!data.message){alert(\"fill every field\");}else alert(\"Message Submitted Successfully\");setData({name:\"\",email:\"\",message:\"\"});};useEffect(()=>{setCurrentPath(pathname);},[pathname,setCurrentPath]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen p-10 flex flex-col items-center\",children:[/*#__PURE__*/_jsx(InputControl,{label:\"Name\",placeholder:\"Enter Your Name\",value:data.name,onChange:event=>setData(prev=>({...prev,name:event.target.value}))}),/*#__PURE__*/_jsx(InputControl,{label:\"Email\",placeholder:\"Enter Your Email\",value:data.email,onChange:event=>setData(prev=>({...prev,email:event.target.value}))}),/*#__PURE__*/_jsx(InputControl,{label:\"Message\",placeholder:\"Enter the message\",value:data.message,onChange:event=>setData(prev=>({...prev,message:event.target.value}))}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-green-400 py-2 px-5 border rounded font-Arvo\",onClick:handleClick,children:\"Submit\"})]})});};export default Contact;","map":{"version":3,"names":["useState","useContext","useEffect","useLocation","PathContext","InputControl","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Contact","setCurrentPath","pathname","data","setData","name","email","message","handleClick","alert","children","className","label","placeholder","value","onChange","event","prev","target","onClick"],"sources":["/Users/himanshi/Desktop/swiggyreact/src/components/Contact.js"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport PathContext from \"../utils/PathContext\";\nimport InputControl from \"./InputControl\";\n\nconst Contact = () => {\n\n  const {setCurrentPath} = useContext(PathContext);\n  const {pathname} = useLocation();\n\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\",\n  });\n\n\n  const handleClick = () => {\n      if(!data.name || !data.email || !data.message){\n          alert(\"fill every field\");\n      }\n      else alert(\"Message Submitted Successfully\");\n      setData({\n          name: \"\",\n          email: \"\",\n          message: \"\"\n      })\n  }\n\n  useEffect(() => {\n    setCurrentPath(pathname);\n  }, [pathname, setCurrentPath])\n\n  return (\n    <>\n      <div className=\"min-h-screen p-10 flex flex-col items-center\">\n        <InputControl label=\"Name\" placeholder=\"Enter Your Name\" \n        value = {data.name} \n        onChange = {(event) => setData((prev) => ({\n            ...prev, \n            name: event.target.value,\n            }))\n        }\n        ></InputControl>\n\n        <InputControl\n          label=\"Email\"\n          placeholder=\"Enter Your Email\"\n          value = {data.email}\n          onChange = {(event) => setData((prev) => ({\n              ...prev, \n              email: event.target.value,\n          }))}\n        ></InputControl>\n\n        <InputControl\n          label=\"Message\"\n          placeholder=\"Enter the message\"\n          value = {data.message}\n          onChange = {(event) => setData((prev) => ({\n              ...prev,\n              message: event.target.value,\n          }))}\n\n        ></InputControl>\n\n        <button className=\"bg-green-400 py-2 px-5 border rounded font-Arvo\"\n        onClick={handleClick}\n        >\n          Submit\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default Contact;"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CACvD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,WAAW,KAAM,sBAAsB,CAC9C,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE1C,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAEpB,KAAM,CAACC,cAAc,CAAC,CAAGZ,UAAU,CAACG,WAAW,CAAC,CAChD,KAAM,CAACU,QAAQ,CAAC,CAAGX,WAAW,CAAC,CAAC,CAEhC,KAAM,CAACY,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,CAC/BiB,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EACX,CAAC,CAAC,CAGF,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACtB,GAAG,CAACL,IAAI,CAACE,IAAI,EAAI,CAACF,IAAI,CAACG,KAAK,EAAI,CAACH,IAAI,CAACI,OAAO,CAAC,CAC1CE,KAAK,CAAC,kBAAkB,CAAC,CAC7B,CAAC,IACI,CAAAA,KAAK,CAAC,gCAAgC,CAAC,CAC5CL,OAAO,CAAC,CACJC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EACb,CAAC,CAAC,CACN,CAAC,CAEDjB,SAAS,CAAC,IAAM,CACdW,cAAc,CAACC,QAAQ,CAAC,CAC1B,CAAC,CAAE,CAACA,QAAQ,CAAED,cAAc,CAAC,CAAC,CAE9B,mBACEN,IAAA,CAAAI,SAAA,EAAAW,QAAA,cACEb,KAAA,QAAKc,SAAS,CAAC,8CAA8C,CAAAD,QAAA,eAC3Df,IAAA,CAACF,YAAY,EAACmB,KAAK,CAAC,MAAM,CAACC,WAAW,CAAC,iBAAiB,CACxDC,KAAK,CAAIX,IAAI,CAACE,IAAK,CACnBU,QAAQ,CAAKC,KAAK,EAAKZ,OAAO,CAAEa,IAAI,GAAM,CACtC,GAAGA,IAAI,CACPZ,IAAI,CAAEW,KAAK,CAACE,MAAM,CAACJ,KACnB,CAAC,CAAC,CACL,CACc,CAAC,cAEhBnB,IAAA,CAACF,YAAY,EACXmB,KAAK,CAAC,OAAO,CACbC,WAAW,CAAC,kBAAkB,CAC9BC,KAAK,CAAIX,IAAI,CAACG,KAAM,CACpBS,QAAQ,CAAKC,KAAK,EAAKZ,OAAO,CAAEa,IAAI,GAAM,CACtC,GAAGA,IAAI,CACPX,KAAK,CAAEU,KAAK,CAACE,MAAM,CAACJ,KACxB,CAAC,CAAC,CAAE,CACS,CAAC,cAEhBnB,IAAA,CAACF,YAAY,EACXmB,KAAK,CAAC,SAAS,CACfC,WAAW,CAAC,mBAAmB,CAC/BC,KAAK,CAAIX,IAAI,CAACI,OAAQ,CACtBQ,QAAQ,CAAKC,KAAK,EAAKZ,OAAO,CAAEa,IAAI,GAAM,CACtC,GAAGA,IAAI,CACPV,OAAO,CAAES,KAAK,CAACE,MAAM,CAACJ,KAC1B,CAAC,CAAC,CAAE,CAES,CAAC,cAEhBnB,IAAA,WAAQgB,SAAS,CAAC,iDAAiD,CACnEQ,OAAO,CAAEX,WAAY,CAAAE,QAAA,CACpB,QAED,CAAQ,CAAC,EACN,CAAC,CACN,CAAC,CAEP,CAAC,CAED,cAAe,CAAAV,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}