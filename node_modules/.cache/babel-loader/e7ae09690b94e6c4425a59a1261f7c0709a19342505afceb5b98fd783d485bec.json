{"ast":null,"code":"var _jsxFileName = \"/Users/himanshi/Desktop/swiggyreact/src/components/Body.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport useOnlineStatus from \"../utils/useOnlineStatus\";\nimport { filterRestaurants } from \"../utils/utils\";\nimport { restaurants } from \"./Config\";\nimport RestaurantCard from \"./RestaurantCard\";\nimport ShimmerUI from \"./ShimmerUI\";\nimport SearchTextContext from \"../utils/SearchTextContext\";\nimport PathContext from \"../utils/PathContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [filteredRestaurants, setFilteredRestaurants] = useState([]);\n  const {\n    searchTxt,\n    setsearchTxt,\n    searchTxtFound\n  } = useContext(SearchTextContext);\n  const {\n    pathname\n  } = useLocation();\n  const {\n    setCurrentPath\n  } = useContext(PathContext);\n  useEffect(() => {\n    setCurrentPath(pathname);\n    setsearchTxt(\"\");\n  }, []);\n\n  // searching\n  useEffect(() => {\n    const result = filterRestaurants(searchTxt, restaurants);\n    if (result.length === 0) {\n      alert(\"No Restaurant Found\");\n    } else {\n      setFilteredRestaurants(result);\n    }\n  }, [searchTxtFound]);\n  const isOnline = useOnlineStatus();\n  if (!isOnline) {\n    alert(\"You're offline, Please check your internet connection\");\n    return /*#__PURE__*/_jsxDEV(ShimmerUI, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  return restaurants.length === 0 || filteredRestaurants.length === 0 ? /*#__PURE__*/_jsxDEV(ShimmerUI, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-around flex-wrap my-6 mx-3 min-h-screen\",\n      children: filteredRestaurants.map(restaurant => {\n        return /*#__PURE__*/_createElement(RestaurantCard, {\n          ...(restaurant === null || restaurant === void 0 ? void 0 : restaurant.info),\n          key: restaurant === null || restaurant === void 0 ? void 0 : restaurant.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 18\n          }\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Body, \"ETHLYEe8BDVVLSQPXmd+AaLwJcE=\", false, function () {\n  return [useLocation, useOnlineStatus];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useState","useEffect","useContext","useLocation","useOnlineStatus","filterRestaurants","restaurants","RestaurantCard","ShimmerUI","SearchTextContext","PathContext","jsxDEV","_jsxDEV","createElement","_createElement","Fragment","_Fragment","Body","_s","filteredRestaurants","setFilteredRestaurants","searchTxt","setsearchTxt","searchTxtFound","pathname","setCurrentPath","result","length","alert","isOnline","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","restaurant","info","key","id","__self","__source","_c","$RefreshReg$"],"sources":["/Users/himanshi/Desktop/swiggyreact/src/components/Body.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport useOnlineStatus from \"../utils/useOnlineStatus\";\nimport { filterRestaurants } from \"../utils/utils\";\nimport { restaurants } from \"./Config\";\nimport RestaurantCard from \"./RestaurantCard\";\nimport ShimmerUI from \"./ShimmerUI\";\nimport SearchTextContext from \"../utils/SearchTextContext\";\nimport PathContext from \"../utils/PathContext\";\n\nconst Body = () => {\n  const [filteredRestaurants, setFilteredRestaurants] = useState([]);\n  const { searchTxt, setsearchTxt, searchTxtFound } =\n    useContext(SearchTextContext);\n\n  const { pathname } = useLocation();\n  const { setCurrentPath } = useContext(PathContext);\n\n  useEffect(() => {\n    setCurrentPath(pathname);\n    setsearchTxt(\"\");\n  }, []);\n\n  // searching\n  useEffect(() => {\n    const result = filterRestaurants(searchTxt, restaurants);\n    if (result.length === 0) {\n      alert(\"No Restaurant Found\");\n    } else {\n      setFilteredRestaurants(result);\n    }\n  }, [searchTxtFound]);\n\n  const isOnline = useOnlineStatus();\n  if (!isOnline) {\n    alert(\"You're offline, Please check your internet connection\");\n    return <ShimmerUI />;\n  }\n\n  return restaurants.length === 0 || filteredRestaurants.length === 0 ? (\n    <ShimmerUI />\n  ) : (\n    <>\n      <div className=\"flex justify-around flex-wrap my-6 mx-3 min-h-screen\">\n        {filteredRestaurants.map((restaurant) => {\n          return <RestaurantCard {...restaurant?.info} key={restaurant?.id} />;\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Body;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,WAAW,QAAQ,UAAU;AACtC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,iBAAiB,MAAM,4BAA4B;AAC1D,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,aAAA,IAAAC,cAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM;IAAEqB,SAAS;IAAEC,YAAY;IAAEC;EAAe,CAAC,GAC/CrB,UAAU,CAACO,iBAAiB,CAAC;EAE/B,MAAM;IAAEe;EAAS,CAAC,GAAGrB,WAAW,CAAC,CAAC;EAClC,MAAM;IAAEsB;EAAe,CAAC,GAAGvB,UAAU,CAACQ,WAAW,CAAC;EAElDT,SAAS,CAAC,MAAM;IACdwB,cAAc,CAACD,QAAQ,CAAC;IACxBF,YAAY,CAAC,EAAE,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACArB,SAAS,CAAC,MAAM;IACd,MAAMyB,MAAM,GAAGrB,iBAAiB,CAACgB,SAAS,EAAEf,WAAW,CAAC;IACxD,IAAIoB,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MACvBC,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,MAAM;MACLR,sBAAsB,CAACM,MAAM,CAAC;IAChC;EACF,CAAC,EAAE,CAACH,cAAc,CAAC,CAAC;EAEpB,MAAMM,QAAQ,GAAGzB,eAAe,CAAC,CAAC;EAClC,IAAI,CAACyB,QAAQ,EAAE;IACbD,KAAK,CAAC,uDAAuD,CAAC;IAC9D,oBAAOhB,OAAA,CAACJ,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtB;EAEA,OAAO3B,WAAW,CAACqB,MAAM,KAAK,CAAC,IAAIR,mBAAmB,CAACQ,MAAM,KAAK,CAAC,gBACjEf,OAAA,CAACJ,SAAS;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAEbrB,OAAA,CAAAI,SAAA;IAAAkB,QAAA,eACEtB,OAAA;MAAKuB,SAAS,EAAC,sDAAsD;MAAAD,QAAA,EAClEf,mBAAmB,CAACiB,GAAG,CAAEC,UAAU,IAAK;QACvC,oBAAOvB,cAAA,CAACP,cAAc;UAAA,IAAK8B,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEC,IAAI;UAAEC,GAAG,EAAEF,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEG,EAAG;UAAAC,MAAA;UAAAC,QAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAAE,CAAC;MACtE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CACH;AACH,CAAC;AAACf,EAAA,CAxCID,IAAI;EAAA,QAKad,WAAW,EAkBfC,eAAe;AAAA;AAAAuC,EAAA,GAvB5B1B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}